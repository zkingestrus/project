version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: battle-arena-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: battle_arena
      MYSQL_USER: battle_user
      MYSQL_PASSWORD: battle_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: battle-arena-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # 后端 API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: battle-arena-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: mysql://battle_user:battle_pass@mysql:3306/battle_arena
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-here-change-in-production
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: admin123
      ADMIN_EMAIL: admin@example.com
      MATCH_COST_DIAMONDS: 10
      MATCH_TIMEOUT_SECONDS: 300
      PRISMA_CLIENT_ENGINE_TYPE: wasm
      CORS_ORIGIN: http://106.53.187.98
    ports:
      - "3001:3001"
    depends_on:
      - mysql
      - redis

  # 前端
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: battle-arena-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend

volumes:
  mysql_data:
  redis_data: 